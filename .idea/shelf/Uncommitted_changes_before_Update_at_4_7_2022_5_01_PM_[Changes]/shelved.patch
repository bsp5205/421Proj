Index: main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express')\r\nvar path = require('path');\r\nconst response = require(\"express\");\r\nconst createError = require(\"http-errors\");\r\nconst sql = require('mysql');\r\nvar passport = require('passport');\r\nvar bodyParser = require('body-parser');\r\nvar localStrategy = require('passport-local').Strategy;\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\nvar UserList = [{username:'admin',password:'admin'}];\r\n\r\napp.use(bodyParser.urlencoded({extended: false}));\r\napp.use(passport.initialize());\r\n\r\napp.set(\"views\",path.resolve(__dirname,\"views\"));\r\napp.set(\"view engine\",\"ejs\");\r\n\r\npassport.use('local', new localStrategy(\r\n    function(username, password, done) {\r\n\r\n        var Check_user = username;\r\n        var Info = UserList.find((element) => {\r\n            if (element.username == Check_user) {\r\n                return element;\r\n            }\r\n        });\r\n\r\n        console.log(\"Auth found this \" + Info);\r\n        if (Info == undefined || Info == null) {\r\n            return done(null, false, {message: 'Incorrect username'});\r\n        }\r\n        if (Info.password != password) {\r\n            return done(null, false, {message: 'Incorrect password'});\r\n        } else {\r\n            console.log(\"Accepted\");\r\n            return done(null, Info);\r\n        }\r\n    }\r\n));\r\n\r\napp.post('/login', passport.authenticate('local',{\r\n        successRedirect: \"/\",\r\n        failureRedirect: \"/login-failed\",\r\n        session:false\r\n    })\r\n);\r\n\r\napp.use(express.static(path.join(__dirname,'public')));\r\n\r\n\r\napp.get(\"/\", function(req,res){\r\n    res.render(\"index\", {title:\"FUABAR | Home\",message:\"This is a message\"});\r\n});\r\n\r\napp.get(\"/login\", (req, res) => {\r\n    res.render(\"login.ejs\", {title: \"FUBAR | Login\", message:\"\"});\r\n});\r\n\r\napp.get(\"/login-failed\", (req, res) => {\r\n    res.render(\"login.ejs\", {title: \"FUBAR | Login\", message: \"Username or password incorrect. Please try again.\"});\r\n});\r\n\r\napp.get(\"/signup\", (req,res) =>{\r\n    res.render(\"signup.ejs\", {title: \"FUBAR | Sign Up\"})\r\n});\r\n\r\napp.get(\"/post_name\", (req, res) => {\r\n    res.render(\"post\", {title:\"Post Title\", post_content:\"Post content\"});\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`App listening at http://localhost:${port}`)\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.js b/main.js
--- a/main.js	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/main.js	(date 1649365149961)
@@ -50,9 +50,51 @@
 
 app.use(express.static(path.join(__dirname,'public')));
 
+var passport = require('passport');
+var bodyParser = require('body-parser');
+var localStrategy = require('passport-local').Strategy;
+
+var UserList = [{username:'admin', password:'admin'}];
+
+app.use(bodyParser.urlencoded({extended: false}));
+app.use(passport.initialize());
+
+passport.use('local', new localStrategy(
+    function(username, password, done) {
+
+        var Check_user = username;
+        var Info = UserList.find((element) => {
+            if (element.username == Check_user) {
+                return element;
+            }
+        });
+
+        console.log("Auth found this " + Info);
+        if (Info == undefined || Info == null) {
+            return done(null, false, {message: 'Incorrect username'});
+        }
+        if (Info.password != password) {
+            return done(null, false, {message: 'Incorrect password'});
+        } else {
+            console.log("Accepted");
+            return done(null, Info);
+        }
+    }
+));
+
+app.post('/login', passport.authenticate('local',{
+        successRedirect: "/success",
+        failureRedirect: "/login",
+        session:false
+    })
+);
+
+app.get("/success", (req,res)=>
+    res.render("success.ejs",{title: "FUBAR | success"})
+);
 
 app.get("/", function(req,res){
-    res.render("index", {title:"FUABAR | Home",message:"This is a message"});
+    res.render("index", {title:"FUABAR | Home", message:"This is a message"});
 });
 
 app.get("/login", (req, res) => {
Index: views/login.ejs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><head>\r\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\"></head>\r\n</head>\r\n<style>\r\n  .profile-image-pic{\r\n    height: 200px;\r\n    width: 200px;\r\n    object-fit: scale-down;\r\n  }\r\n  .cardbody-color{\r\n    background-color: lightgray;\r\n  }\r\n  a{\r\n    text-decoration: none;\r\n  }\r\n  .button:hover {\r\n    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.5),0 17px 50px 0 rgba(0,0,0,0.19);\r\n  }\r\n  .button {\r\n    background-color: rgb(54, 54, 54);\r\n    border: none;\r\n    color: white;\r\n    padding: 5px 20px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n    -webkit-transition-duration: 0.4s; /* Safari */\r\n    transition-duration: 0.4s;\r\n  }\r\n  body{\r\n    background-image: url(\"https://images.hdqwalls.com/wallpapers/vaporwave-zl.jpg\") !important;\r\n    background-size: cover;\r\n  }\r\n  .centering{\r\n    text-align:center;\r\n    font-weight: bold;\r\n  }\r\n</style>\r\n<div class=\"background\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3\">\r\n        <div class=\"card my-5\">\r\n\r\n          <form action=\"http://localhost:3000/login\" class=\"card-body cardbody-color p-lg-5\" method=\"post\">\r\n\r\n            <div class=\"text-center\">\r\n              <img src=\"./images/Logo.png\" class=\"img-fluid profile-image-pic img-thumbnail rounded-circle my-3\"\r\n                   alt=\"Logo\">\r\n            </div>\r\n\r\n            <div class=\"mb-3\">\r\n              <input type=\"text\" class=\"form-control\" id=\"Username\" name=\"username\" aria-describedby=\"emailHelp\"\r\n                     placeholder=\"User Name\">\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <input type=\"password\" class=\"form-control\" id=\"password\"  name=\"password\" placeholder=\"password\">\r\n            </div>\r\n            <div class=\"text-center\"><button type=\"submit\" class=\"button\">Login</button></div>\r\n            <div id=\"emailHelp\" class=\"form-text text-center mb-5 text-dark\">Not\r\n              Registered? <a href=\"/signup\" class=\"text-dark fw-bold\"> Create an\r\n                Account</a>\r\n            </div>\r\n            <div class=\"centering\">\r\n              <p><%= message %></p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/login.ejs b/views/login.ejs
--- a/views/login.ejs	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/views/login.ejs	(date 1649364740487)
@@ -34,10 +34,6 @@
     background-image: url("https://images.hdqwalls.com/wallpapers/vaporwave-zl.jpg") !important;
     background-size: cover;
   }
-  .centering{
-    text-align:center;
-    font-weight: bold;
-  }
 </style>
 <div class="background">
   <div class="container">
@@ -45,7 +41,7 @@
       <div class="col-md-6 offset-md-3">
         <div class="card my-5">
 
-          <form action="http://localhost:3000/login" class="card-body cardbody-color p-lg-5" method="post">
+          <form class="card-body cardbody-color p-lg-5">
 
             <div class="text-center">
               <img src="./images/Logo.png" class="img-fluid profile-image-pic img-thumbnail rounded-circle my-3"
@@ -53,19 +49,16 @@
             </div>
 
             <div class="mb-3">
-              <input type="text" class="form-control" id="Username" name="username" aria-describedby="emailHelp"
+              <input type="text" class="form-control" id="Username" aria-describedby="emailHelp"
                      placeholder="User Name">
             </div>
             <div class="mb-3">
-              <input type="password" class="form-control" id="password"  name="password" placeholder="password">
+              <input type="password" class="form-control" id="password" placeholder="password">
             </div>
             <div class="text-center"><button type="submit" class="button">Login</button></div>
             <div id="emailHelp" class="form-text text-center mb-5 text-dark">Not
-              Registered? <a href="/signup" class="text-dark fw-bold"> Create an
+              Registered? <a href="#" class="text-dark fw-bold"> Create an
                 Account</a>
-            </div>
-            <div class="centering">
-              <p><%= message %></p>
             </div>
           </form>
         </div>
Index: node_modules/.package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"421proj\",\r\n  \"version\": \"0.0.0\",\r\n  \"lockfileVersion\": 2,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\"\r\n    },\r\n    \"node_modules/basic-auth\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/bignumber.js\": {\r\n      \"version\": \"9.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz\",\r\n      \"integrity\": \"sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A==\",\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.0.tgz\",\r\n      \"integrity\": \"sha512-DfJ+q6EPcGKZD1QWUjSpqp+Q7bDQTsQIF4zfUAtZ6qk+H/3/QRhg9CEp39ss+/T2vw0+HaidC0ecJj/DRLIaKg==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.10.3\",\r\n        \"raw-body\": \"2.5.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/body-parser/node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/qs\": {\r\n      \"version\": \"6.10.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.10.3.tgz\",\r\n      \"integrity\": \"sha512-wr7M2E0OFRfIfJZjKGieI8lBKb7fRCH4Fv5KNPEs7gJ8jadvotdsS08PzOKR7opXhZ/Xkjtt3WF9g38drmyRqQ==\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/body-parser/node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"get-intrinsic\": \"^1.0.2\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-DPaLud318r55YcOoUXjLhdunjLQ=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\r\n      \"integrity\": \"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-parser\": {\r\n      \"version\": \"1.4.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz\",\r\n      \"integrity\": \"sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==\",\r\n      \"dependencies\": {\r\n        \"cookie\": \"0.4.1\",\r\n        \"cookie-signature\": \"1.0.6\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\"\r\n    },\r\n    \"node_modules/core-util-is\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz\",\r\n      \"integrity\": \"sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\"\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\"\r\n    },\r\n    \"node_modules/ejs\": {\r\n      \"version\": \"2.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-2.6.2.tgz\",\r\n      \"integrity\": \"sha512-PcW2a0tyTuPHz3tWyYqtK6r1fZ3gp+3Sop8Ph+ZYN81Ob5rwmbHEzaqs10N3BEsaGTkh/ooniXK+WwszGlc2+Q==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.16.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.16.4.tgz\",\r\n      \"integrity\": \"sha512-j12Uuyb4FMrd/qQAm6uCHAkPtO8FDTRJZBDd5D2KOL2eLaz1yUNdUB/NOIyq0iU4q4cFarsUCrnFDPBcnksuOg==\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.5\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.18.3\",\r\n        \"content-disposition\": \"0.5.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.3.1\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.1.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.4\",\r\n        \"qs\": \"6.5.2\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"send\": \"0.16.2\",\r\n        \"serve-static\": \"1.13.2\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"type-is\": \"~1.6.16\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/body-parser\": {\r\n      \"version\": \"1.18.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz\",\r\n      \"integrity\": \"sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.0.0\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"http-errors\": \"~1.6.3\",\r\n        \"iconv-lite\": \"0.4.23\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"qs\": \"6.5.2\",\r\n        \"raw-body\": \"2.3.3\",\r\n        \"type-is\": \"~1.6.16\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/bytes\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz\",\r\n      \"integrity\": \"sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/cookie\": {\r\n      \"version\": \"0.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz\",\r\n      \"integrity\": \"sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.23\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz\",\r\n      \"integrity\": \"sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/raw-body\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.0.0\",\r\n        \"http-errors\": \"1.6.3\",\r\n        \"iconv-lite\": \"0.4.23\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-Y1GUDo39ez4aHAw7MysnUD5JzYX+WaIj8I57kO3aEPT1fFRL4sr7mjei97FgnwhAyyzRYmQZaTHb2+9uZ1dPtg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\"\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"has\": \"^1.0.3\",\r\n        \"has-symbols\": \"^1.0.1\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"1.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\r\n      \"integrity\": \"sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=\",\r\n      \"dependencies\": {\r\n        \"depd\": \"~1.1.2\",\r\n        \"inherits\": \"2.0.3\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \">= 1.4.0 < 2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\r\n      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/isarray\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\"\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/morgan\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/morgan/-/morgan-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-HQStPIV4y3afTiCYVxirakhlCfGkI161c76kKFca7Fk1JusM//Qeo1ej2XaMniiNeaZklMVrh3vTtIzpzwbpmA==\",\r\n      \"dependencies\": {\r\n        \"basic-auth\": \"~2.0.0\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"on-headers\": \"~1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\r\n    },\r\n    \"node_modules/mysql\": {\r\n      \"version\": \"2.18.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz\",\r\n      \"integrity\": \"sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==\",\r\n      \"dependencies\": {\r\n        \"bignumber.js\": \"9.0.0\",\r\n        \"readable-stream\": \"2.3.7\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"sqlstring\": \"2.3.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.12.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.0.tgz\",\r\n      \"integrity\": \"sha512-Ho2z80bVIvJloH+YzRmpZVQe87+qASmBUKZDWgx9cu+KDrX2ZDH/3tMy+gXbZETVGs2M8YdxObOh7XAtim9Y0g==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\r\n      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/on-headers\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/passport\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport/-/passport-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-w9n/Ot5I7orGD4y+7V3EFJCQEznE5RxHamUxcqLT2QoJY0f2JdN8GyHonYFvN0Vz+L6lUJfVhrk2aZz2LbuREw==\",\r\n      \"dependencies\": {\r\n        \"passport-strategy\": \"1.x.x\",\r\n        \"pause\": \"0.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"github\",\r\n        \"url\": \"https://github.com/sponsors/jaredhanson\"\r\n      }\r\n    },\r\n    \"node_modules/passport-local\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-H+YyaMkudWBmJkN+O5BmYsFbpu4=\",\r\n      \"dependencies\": {\r\n        \"passport-strategy\": \"1.x.x\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/passport-strategy\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-tVOaqPwiWj0a0XlHbd8ja0QPUuQ=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\"\r\n    },\r\n    \"node_modules/pause\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\",\r\n      \"integrity\": \"sha1-HUCLP9t2kjuVQ9lvtMnf1TXZy10=\"\r\n    },\r\n    \"node_modules/process-nextick-args\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\"\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.2.tgz\",\r\n      \"integrity\": \"sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\r\n      \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/raw-body/node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/raw-body/node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readable-stream\": {\r\n      \"version\": \"2.3.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\r\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\r\n      \"dependencies\": {\r\n        \"core-util-is\": \"~1.0.0\",\r\n        \"inherits\": \"~2.0.3\",\r\n        \"isarray\": \"~1.0.0\",\r\n        \"process-nextick-args\": \"~2.0.0\",\r\n        \"safe-buffer\": \"~5.1.1\",\r\n        \"string_decoder\": \"~1.1.1\",\r\n        \"util-deprecate\": \"~1.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.16.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.16.2.tgz\",\r\n      \"integrity\": \"sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"destroy\": \"~1.0.4\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"~1.6.2\",\r\n        \"mime\": \"1.4.1\",\r\n        \"ms\": \"2.0.0\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"statuses\": \"~1.4.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.13.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz\",\r\n      \"integrity\": \"sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"send\": \"0.16.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\r\n      \"dependencies\": {\r\n        \"call-bind\": \"^1.0.0\",\r\n        \"get-intrinsic\": \"^1.0.2\",\r\n        \"object-inspect\": \"^1.9.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/sqlstring\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz\",\r\n      \"integrity\": \"sha1-R1OT/56RR5rqYtyvDKPRSYOn+0A=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"1.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz\",\r\n      \"integrity\": \"sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/string_decoder\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"~5.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/util-deprecate\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\"\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.package-lock.json b/node_modules/.package-lock.json
--- a/node_modules/.package-lock.json	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/.package-lock.json	(date 1649364744166)
@@ -351,9 +351,9 @@
       "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",
       "integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",
       "dependencies": {
-        "bytes": "3.0.0",
-        "http-errors": "1.6.3",
-        "iconv-lite": "0.4.23",
+        "bytes": "3.1.2",
+        "http-errors": "2.0.0",
+        "iconv-lite": "0.4.24",
         "unpipe": "1.0.0"
       },
       "engines": {
@@ -689,6 +689,47 @@
         "iconv-lite": "0.4.24",
         "unpipe": "1.0.0"
       },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/depd": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
+      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/http-errors": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
+      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "dependencies": {
+        "depd": "2.0.0",
+        "inherits": "2.0.4",
+        "setprototypeof": "1.2.0",
+        "statuses": "2.0.1",
+        "toidentifier": "1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "node_modules/raw-body/node_modules/setprototypeof": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
+      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
+    },
+    "node_modules/raw-body/node_modules/statuses": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
+      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
       "engines": {
         "node": ">= 0.8"
       }
Index: node_modules/body-parser/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"body-parser\",\r\n  \"description\": \"Node.js body parsing middleware\",\r\n  \"version\": \"1.20.0\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/body-parser\",\r\n  \"dependencies\": {\r\n    \"bytes\": \"3.1.2\",\r\n    \"content-type\": \"~1.0.4\",\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"destroy\": \"1.2.0\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"iconv-lite\": \"0.4.24\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"qs\": \"6.10.3\",\r\n    \"raw-body\": \"2.5.1\",\r\n    \"type-is\": \"~1.6.18\",\r\n    \"unpipe\": \"1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"methods\": \"1.1.2\",\r\n    \"mocha\": \"9.2.2\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"supertest\": \"6.2.2\"\r\n  },\r\n  \"files\": [\r\n    \"lib/\",\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\",\r\n    \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --require test/support/env --reporter spec --check-leaks --bail test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/package.json b/node_modules/body-parser/package.json
--- a/node_modules/body-parser/package.json	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/body-parser/package.json	(date 1649364745182)
@@ -1,56 +1,91 @@
 {
-  "name": "body-parser",
-  "description": "Node.js body parsing middleware",
-  "version": "1.20.0",
+  "_from": "body-parser@1.18.3",
+  "_id": "body-parser@1.18.3",
+  "_inBundle": false,
+  "_integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
+  "_location": "/body-parser",
+  "_phantomChildren": {},
+  "_requested": {
+    "type": "version",
+    "registry": true,
+    "raw": "body-parser@1.18.3",
+    "name": "body-parser",
+    "escapedName": "body-parser",
+    "rawSpec": "1.18.3",
+    "saveSpec": null,
+    "fetchSpec": "1.18.3"
+  },
+  "_requiredBy": [
+    "/express"
+  ],
+  "_resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",
+  "_shasum": "5b292198ffdd553b3a0f20ded0592b956955c8b4",
+  "_spec": "body-parser@1.18.3",
+  "_where": "C:\\Users\\bsp5205\\WebstormProjects\\421Proj\\node_modules\\express",
+  "bugs": {
+    "url": "https://github.com/expressjs/body-parser/issues"
+  },
+  "bundleDependencies": false,
   "contributors": [
-    "Douglas Christopher Wilson <doug@somethingdoug.com>",
-    "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
+    {
+      "name": "Douglas Christopher Wilson",
+      "email": "doug@somethingdoug.com"
+    },
+    {
+      "name": "Jonathan Ong",
+      "email": "me@jongleberry.com",
+      "url": "http://jongleberry.com"
+    }
   ],
-  "license": "MIT",
-  "repository": "expressjs/body-parser",
   "dependencies": {
-    "bytes": "3.1.2",
+    "bytes": "3.0.0",
     "content-type": "~1.0.4",
     "debug": "2.6.9",
-    "depd": "2.0.0",
-    "destroy": "1.2.0",
-    "http-errors": "2.0.0",
-    "iconv-lite": "0.4.24",
-    "on-finished": "2.4.1",
-    "qs": "6.10.3",
-    "raw-body": "2.5.1",
-    "type-is": "~1.6.18",
-    "unpipe": "1.0.0"
+    "depd": "~1.1.2",
+    "http-errors": "~1.6.3",
+    "iconv-lite": "0.4.23",
+    "on-finished": "~2.3.0",
+    "qs": "6.5.2",
+    "raw-body": "2.3.3",
+    "type-is": "~1.6.16"
   },
+  "deprecated": false,
+  "description": "Node.js body parsing middleware",
   "devDependencies": {
-    "eslint": "7.32.0",
-    "eslint-config-standard": "14.1.1",
-    "eslint-plugin-import": "2.25.4",
-    "eslint-plugin-markdown": "2.2.1",
-    "eslint-plugin-node": "11.1.0",
-    "eslint-plugin-promise": "5.2.0",
-    "eslint-plugin-standard": "4.1.0",
+    "eslint": "4.19.1",
+    "eslint-config-standard": "11.0.0",
+    "eslint-plugin-import": "2.11.0",
+    "eslint-plugin-markdown": "1.0.0-beta.6",
+    "eslint-plugin-node": "6.0.1",
+    "eslint-plugin-promise": "3.7.0",
+    "eslint-plugin-standard": "3.1.0",
+    "istanbul": "0.4.5",
     "methods": "1.1.2",
-    "mocha": "9.2.2",
-    "nyc": "15.1.0",
-    "safe-buffer": "5.2.1",
-    "supertest": "6.2.2"
+    "mocha": "2.5.3",
+    "safe-buffer": "5.1.2",
+    "supertest": "1.1.0"
+  },
+  "engines": {
+    "node": ">= 0.8"
   },
   "files": [
     "lib/",
     "LICENSE",
     "HISTORY.md",
-    "SECURITY.md",
     "index.js"
   ],
-  "engines": {
-    "node": ">= 0.8",
-    "npm": "1.2.8000 || >= 1.4.16"
+  "homepage": "https://github.com/expressjs/body-parser#readme",
+  "license": "MIT",
+  "name": "body-parser",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/expressjs/body-parser.git"
   },
   "scripts": {
-    "lint": "eslint .",
+    "lint": "eslint --plugin markdown --ext js,md .",
     "test": "mocha --require test/support/env --reporter spec --check-leaks --bail test/",
-    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
-    "test-cov": "nyc --reporter=html --reporter=text npm test"
-  }
+    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/",
+    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/"
+  },
+  "version": "1.18.3"
 }
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"421proj\",\r\n  \"version\": \"0.0.0\",\r\n  \"lockfileVersion\": 2,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"\": {\r\n      \"name\": \"421proj\",\r\n      \"version\": \"0.0.0\",\r\n      \"dependencies\": {\r\n        \"body-parser\": \"^1.20.0\",\r\n        \"cookie-parser\": \"~1.4.4\",\r\n        \"debug\": \"~2.6.9\",\r\n        \"ejs\": \"~2.6.1\",\r\n        \"express\": \"~4.16.1\",\r\n        \"http-errors\": \"~1.6.3\",\r\n        \"morgan\": \"~1.9.1\",\r\n        \"mysql\": \"^2.18.1\",\r\n        \"passport\": \"^0.5.2\",\r\n        \"passport-local\": \"^1.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\"\r\n    },\r\n    \"node_modules/basic-auth\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/bignumber.js\": {\r\n      \"version\": \"9.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz\",\r\n      \"integrity\": \"sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A==\",\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.0.tgz\",\r\n      \"integrity\": \"sha512-DfJ+q6EPcGKZD1QWUjSpqp+Q7bDQTsQIF4zfUAtZ6qk+H/3/QRhg9CEp39ss+/T2vw0+HaidC0ecJj/DRLIaKg==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.10.3\",\r\n        \"raw-body\": \"2.5.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/body-parser/node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/qs\": {\r\n      \"version\": \"6.10.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.10.3.tgz\",\r\n      \"integrity\": \"sha512-wr7M2E0OFRfIfJZjKGieI8lBKb7fRCH4Fv5KNPEs7gJ8jadvotdsS08PzOKR7opXhZ/Xkjtt3WF9g38drmyRqQ==\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser/node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/body-parser/node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"get-intrinsic\": \"^1.0.2\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-DPaLud318r55YcOoUXjLhdunjLQ=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\r\n      \"integrity\": \"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-parser\": {\r\n      \"version\": \"1.4.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz\",\r\n      \"integrity\": \"sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==\",\r\n      \"dependencies\": {\r\n        \"cookie\": \"0.4.1\",\r\n        \"cookie-signature\": \"1.0.6\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\"\r\n    },\r\n    \"node_modules/core-util-is\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz\",\r\n      \"integrity\": \"sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\"\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\"\r\n    },\r\n    \"node_modules/ejs\": {\r\n      \"version\": \"2.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-2.6.2.tgz\",\r\n      \"integrity\": \"sha512-PcW2a0tyTuPHz3tWyYqtK6r1fZ3gp+3Sop8Ph+ZYN81Ob5rwmbHEzaqs10N3BEsaGTkh/ooniXK+WwszGlc2+Q==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.16.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.16.4.tgz\",\r\n      \"integrity\": \"sha512-j12Uuyb4FMrd/qQAm6uCHAkPtO8FDTRJZBDd5D2KOL2eLaz1yUNdUB/NOIyq0iU4q4cFarsUCrnFDPBcnksuOg==\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.5\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.18.3\",\r\n        \"content-disposition\": \"0.5.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.3.1\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.1.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.4\",\r\n        \"qs\": \"6.5.2\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"send\": \"0.16.2\",\r\n        \"serve-static\": \"1.13.2\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"type-is\": \"~1.6.16\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/body-parser\": {\r\n      \"version\": \"1.18.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz\",\r\n      \"integrity\": \"sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.0.0\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"http-errors\": \"~1.6.3\",\r\n        \"iconv-lite\": \"0.4.23\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"qs\": \"6.5.2\",\r\n        \"raw-body\": \"2.3.3\",\r\n        \"type-is\": \"~1.6.16\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/bytes\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz\",\r\n      \"integrity\": \"sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/cookie\": {\r\n      \"version\": \"0.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz\",\r\n      \"integrity\": \"sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.23\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz\",\r\n      \"integrity\": \"sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/raw-body\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.0.0\",\r\n        \"http-errors\": \"1.6.3\",\r\n        \"iconv-lite\": \"0.4.23\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-Y1GUDo39ez4aHAw7MysnUD5JzYX+WaIj8I57kO3aEPT1fFRL4sr7mjei97FgnwhAyyzRYmQZaTHb2+9uZ1dPtg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\"\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"has\": \"^1.0.3\",\r\n        \"has-symbols\": \"^1.0.1\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"1.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\r\n      \"integrity\": \"sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=\",\r\n      \"dependencies\": {\r\n        \"depd\": \"~1.1.2\",\r\n        \"inherits\": \"2.0.3\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \">= 1.4.0 < 2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\r\n      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/isarray\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\"\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/morgan\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/morgan/-/morgan-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-HQStPIV4y3afTiCYVxirakhlCfGkI161c76kKFca7Fk1JusM//Qeo1ej2XaMniiNeaZklMVrh3vTtIzpzwbpmA==\",\r\n      \"dependencies\": {\r\n        \"basic-auth\": \"~2.0.0\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"on-headers\": \"~1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\r\n    },\r\n    \"node_modules/mysql\": {\r\n      \"version\": \"2.18.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz\",\r\n      \"integrity\": \"sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==\",\r\n      \"dependencies\": {\r\n        \"bignumber.js\": \"9.0.0\",\r\n        \"readable-stream\": \"2.3.7\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"sqlstring\": \"2.3.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.12.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.0.tgz\",\r\n      \"integrity\": \"sha512-Ho2z80bVIvJloH+YzRmpZVQe87+qASmBUKZDWgx9cu+KDrX2ZDH/3tMy+gXbZETVGs2M8YdxObOh7XAtim9Y0g==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\r\n      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/on-headers\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/passport\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport/-/passport-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-w9n/Ot5I7orGD4y+7V3EFJCQEznE5RxHamUxcqLT2QoJY0f2JdN8GyHonYFvN0Vz+L6lUJfVhrk2aZz2LbuREw==\",\r\n      \"dependencies\": {\r\n        \"passport-strategy\": \"1.x.x\",\r\n        \"pause\": \"0.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"github\",\r\n        \"url\": \"https://github.com/sponsors/jaredhanson\"\r\n      }\r\n    },\r\n    \"node_modules/passport-local\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-H+YyaMkudWBmJkN+O5BmYsFbpu4=\",\r\n      \"dependencies\": {\r\n        \"passport-strategy\": \"1.x.x\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/passport-strategy\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-tVOaqPwiWj0a0XlHbd8ja0QPUuQ=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\"\r\n    },\r\n    \"node_modules/pause\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\",\r\n      \"integrity\": \"sha1-HUCLP9t2kjuVQ9lvtMnf1TXZy10=\"\r\n    },\r\n    \"node_modules/process-nextick-args\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\"\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.2.tgz\",\r\n      \"integrity\": \"sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\r\n      \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body/node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/raw-body/node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/raw-body/node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readable-stream\": {\r\n      \"version\": \"2.3.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\r\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\r\n      \"dependencies\": {\r\n        \"core-util-is\": \"~1.0.0\",\r\n        \"inherits\": \"~2.0.3\",\r\n        \"isarray\": \"~1.0.0\",\r\n        \"process-nextick-args\": \"~2.0.0\",\r\n        \"safe-buffer\": \"~5.1.1\",\r\n        \"string_decoder\": \"~1.1.1\",\r\n        \"util-deprecate\": \"~1.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.16.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.16.2.tgz\",\r\n      \"integrity\": \"sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"destroy\": \"~1.0.4\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"~1.6.2\",\r\n        \"mime\": \"1.4.1\",\r\n        \"ms\": \"2.0.0\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"statuses\": \"~1.4.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.13.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz\",\r\n      \"integrity\": \"sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"send\": \"0.16.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\r\n      \"dependencies\": {\r\n        \"call-bind\": \"^1.0.0\",\r\n        \"get-intrinsic\": \"^1.0.2\",\r\n        \"object-inspect\": \"^1.9.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/sqlstring\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz\",\r\n      \"integrity\": \"sha1-R1OT/56RR5rqYtyvDKPRSYOn+0A=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"1.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz\",\r\n      \"integrity\": \"sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/string_decoder\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"~5.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/util-deprecate\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\"\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    }\r\n  },\r\n  \"dependencies\": {\r\n    \"accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"requires\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      }\r\n    },\r\n    \"array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\"\r\n    },\r\n    \"basic-auth\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-NF+epuEdnUYVlGuhaxbbq+dvJttwLnGY+YixlXlME5KpQ5W3CnXA5cVTneY3SPbPDRkcjMbifrwmFYcClgOZeg==\",\r\n      \"requires\": {\r\n        \"safe-buffer\": \"5.1.2\"\r\n      }\r\n    },\r\n    \"bignumber.js\": {\r\n      \"version\": \"9.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz\",\r\n      \"integrity\": \"sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A==\"\r\n    },\r\n    \"body-parser\": {\r\n      \"version\": \"1.20.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.0.tgz\",\r\n      \"integrity\": \"sha512-DfJ+q6EPcGKZD1QWUjSpqp+Q7bDQTsQIF4zfUAtZ6qk+H/3/QRhg9CEp39ss+/T2vw0+HaidC0ecJj/DRLIaKg==\",\r\n      \"requires\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.10.3\",\r\n        \"raw-body\": \"2.5.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"dependencies\": {\r\n        \"depd\": {\r\n          \"version\": \"2.0.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n          \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\"\r\n        },\r\n        \"destroy\": {\r\n          \"version\": \"1.2.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n          \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\"\r\n        },\r\n        \"http-errors\": {\r\n          \"version\": \"2.0.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n          \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n          \"requires\": {\r\n            \"depd\": \"2.0.0\",\r\n            \"inherits\": \"2.0.4\",\r\n            \"setprototypeof\": \"1.2.0\",\r\n            \"statuses\": \"2.0.1\",\r\n            \"toidentifier\": \"1.0.1\"\r\n          }\r\n        },\r\n        \"inherits\": {\r\n          \"version\": \"2.0.4\",\r\n          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n          \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n        },\r\n        \"on-finished\": {\r\n          \"version\": \"2.4.1\",\r\n          \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n          \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n          \"requires\": {\r\n            \"ee-first\": \"1.1.1\"\r\n          }\r\n        },\r\n        \"qs\": {\r\n          \"version\": \"6.10.3\",\r\n          \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.10.3.tgz\",\r\n          \"integrity\": \"sha512-wr7M2E0OFRfIfJZjKGieI8lBKb7fRCH4Fv5KNPEs7gJ8jadvotdsS08PzOKR7opXhZ/Xkjtt3WF9g38drmyRqQ==\",\r\n          \"requires\": {\r\n            \"side-channel\": \"^1.0.4\"\r\n          }\r\n        },\r\n        \"setprototypeof\": {\r\n          \"version\": \"1.2.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n          \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n        },\r\n        \"statuses\": {\r\n          \"version\": \"2.0.1\",\r\n          \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n          \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\"\r\n        }\r\n      }\r\n    },\r\n    \"bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\"\r\n    },\r\n    \"call-bind\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==\",\r\n      \"requires\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"get-intrinsic\": \"^1.0.2\"\r\n      }\r\n    },\r\n    \"content-disposition\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-DPaLud318r55YcOoUXjLhdunjLQ=\"\r\n    },\r\n    \"content-type\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\"\r\n    },\r\n    \"cookie\": {\r\n      \"version\": \"0.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\r\n      \"integrity\": \"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\"\r\n    },\r\n    \"cookie-parser\": {\r\n      \"version\": \"1.4.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz\",\r\n      \"integrity\": \"sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==\",\r\n      \"requires\": {\r\n        \"cookie\": \"0.4.1\",\r\n        \"cookie-signature\": \"1.0.6\"\r\n      }\r\n    },\r\n    \"cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\"\r\n    },\r\n    \"core-util-is\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"\r\n    },\r\n    \"debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"requires\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"depd\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\"\r\n    },\r\n    \"destroy\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz\",\r\n      \"integrity\": \"sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\"\r\n    },\r\n    \"ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\"\r\n    },\r\n    \"ejs\": {\r\n      \"version\": \"2.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-2.6.2.tgz\",\r\n      \"integrity\": \"sha512-PcW2a0tyTuPHz3tWyYqtK6r1fZ3gp+3Sop8Ph+ZYN81Ob5rwmbHEzaqs10N3BEsaGTkh/ooniXK+WwszGlc2+Q==\"\r\n    },\r\n    \"encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\"\r\n    },\r\n    \"escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\"\r\n    },\r\n    \"etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\"\r\n    },\r\n    \"express\": {\r\n      \"version\": \"4.16.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.16.4.tgz\",\r\n      \"integrity\": \"sha512-j12Uuyb4FMrd/qQAm6uCHAkPtO8FDTRJZBDd5D2KOL2eLaz1yUNdUB/NOIyq0iU4q4cFarsUCrnFDPBcnksuOg==\",\r\n      \"requires\": {\r\n        \"accepts\": \"~1.3.5\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.18.3\",\r\n        \"content-disposition\": \"0.5.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.3.1\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.1.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.4\",\r\n        \"qs\": \"6.5.2\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"send\": \"0.16.2\",\r\n        \"serve-static\": \"1.13.2\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"type-is\": \"~1.6.16\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"dependencies\": {\r\n        \"body-parser\": {\r\n          \"version\": \"1.18.3\",\r\n          \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz\",\r\n          \"integrity\": \"sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=\",\r\n          \"requires\": {\r\n            \"bytes\": \"3.0.0\",\r\n            \"content-type\": \"~1.0.4\",\r\n            \"debug\": \"2.6.9\",\r\n            \"depd\": \"~1.1.2\",\r\n            \"http-errors\": \"~1.6.3\",\r\n            \"iconv-lite\": \"0.4.23\",\r\n            \"on-finished\": \"~2.3.0\",\r\n            \"qs\": \"6.5.2\",\r\n            \"raw-body\": \"2.3.3\",\r\n            \"type-is\": \"~1.6.16\"\r\n          }\r\n        },\r\n        \"bytes\": {\r\n          \"version\": \"3.0.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz\",\r\n          \"integrity\": \"sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=\"\r\n        },\r\n        \"cookie\": {\r\n          \"version\": \"0.3.1\",\r\n          \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz\",\r\n          \"integrity\": \"sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s=\"\r\n        },\r\n        \"iconv-lite\": {\r\n          \"version\": \"0.4.23\",\r\n          \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz\",\r\n          \"integrity\": \"sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==\",\r\n          \"requires\": {\r\n            \"safer-buffer\": \">= 2.1.2 < 3\"\r\n          }\r\n        },\r\n        \"raw-body\": {\r\n          \"version\": \"2.3.3\",\r\n          \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz\",\r\n          \"integrity\": \"sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==\",\r\n          \"requires\": {\r\n            \"bytes\": \"3.0.0\",\r\n            \"http-errors\": \"1.6.3\",\r\n            \"iconv-lite\": \"0.4.23\",\r\n            \"unpipe\": \"1.0.0\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"finalhandler\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-Y1GUDo39ez4aHAw7MysnUD5JzYX+WaIj8I57kO3aEPT1fFRL4sr7mjei97FgnwhAyyzRYmQZaTHb2+9uZ1dPtg==\",\r\n      \"requires\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"statuses\": \"~1.4.0\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      }\r\n    },\r\n    \"forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\"\r\n    },\r\n    \"fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\"\r\n    },\r\n    \"function-bind\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\"\r\n    },\r\n    \"get-intrinsic\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv/cOSeGpcoX4pXHfKUxNKVoArnrEr2e9srnAxxGIraS9Q==\",\r\n      \"requires\": {\r\n        \"function-bind\": \"^1.1.1\",\r\n        \"has\": \"^1.0.3\",\r\n        \"has-symbols\": \"^1.0.1\"\r\n      }\r\n    },\r\n    \"has\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\",\r\n      \"requires\": {\r\n        \"function-bind\": \"^1.1.1\"\r\n      }\r\n    },\r\n    \"has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\"\r\n    },\r\n    \"http-errors\": {\r\n      \"version\": \"1.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz\",\r\n      \"integrity\": \"sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=\",\r\n      \"requires\": {\r\n        \"depd\": \"~1.1.2\",\r\n        \"inherits\": \"2.0.3\",\r\n        \"setprototypeof\": \"1.1.0\",\r\n        \"statuses\": \">= 1.4.0 < 2\"\r\n      }\r\n    },\r\n    \"iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"requires\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      }\r\n    },\r\n    \"inherits\": {\r\n      \"version\": \"2.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz\",\r\n      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\"\r\n    },\r\n    \"ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\"\r\n    },\r\n    \"isarray\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\r\n    },\r\n    \"media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\"\r\n    },\r\n    \"merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\"\r\n    },\r\n    \"methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\"\r\n    },\r\n    \"mime\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==\"\r\n    },\r\n    \"mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\"\r\n    },\r\n    \"mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"requires\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      }\r\n    },\r\n    \"morgan\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/morgan/-/morgan-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-HQStPIV4y3afTiCYVxirakhlCfGkI161c76kKFca7Fk1JusM//Qeo1ej2XaMniiNeaZklMVrh3vTtIzpzwbpmA==\",\r\n      \"requires\": {\r\n        \"basic-auth\": \"~2.0.0\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"on-headers\": \"~1.0.1\"\r\n      }\r\n    },\r\n    \"ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\r\n    },\r\n    \"mysql\": {\r\n      \"version\": \"2.18.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz\",\r\n      \"integrity\": \"sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==\",\r\n      \"requires\": {\r\n        \"bignumber.js\": \"9.0.0\",\r\n        \"readable-stream\": \"2.3.7\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"sqlstring\": \"2.3.1\"\r\n      }\r\n    },\r\n    \"negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\"\r\n    },\r\n    \"object-inspect\": {\r\n      \"version\": \"1.12.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.0.tgz\",\r\n      \"integrity\": \"sha512-Ho2z80bVIvJloH+YzRmpZVQe87+qASmBUKZDWgx9cu+KDrX2ZDH/3tMy+gXbZETVGs2M8YdxObOh7XAtim9Y0g==\"\r\n    },\r\n    \"on-finished\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz\",\r\n      \"integrity\": \"sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\",\r\n      \"requires\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      }\r\n    },\r\n    \"on-headers\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\"\r\n    },\r\n    \"parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\"\r\n    },\r\n    \"passport\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport/-/passport-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-w9n/Ot5I7orGD4y+7V3EFJCQEznE5RxHamUxcqLT2QoJY0f2JdN8GyHonYFvN0Vz+L6lUJfVhrk2aZz2LbuREw==\",\r\n      \"requires\": {\r\n        \"passport-strategy\": \"1.x.x\",\r\n        \"pause\": \"0.0.1\"\r\n      }\r\n    },\r\n    \"passport-local\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-H+YyaMkudWBmJkN+O5BmYsFbpu4=\",\r\n      \"requires\": {\r\n        \"passport-strategy\": \"1.x.x\"\r\n      }\r\n    },\r\n    \"passport-strategy\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-tVOaqPwiWj0a0XlHbd8ja0QPUuQ=\"\r\n    },\r\n    \"path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\"\r\n    },\r\n    \"pause\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\",\r\n      \"integrity\": \"sha1-HUCLP9t2kjuVQ9lvtMnf1TXZy10=\"\r\n    },\r\n    \"process-nextick-args\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\"\r\n    },\r\n    \"proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"requires\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      }\r\n    },\r\n    \"qs\": {\r\n      \"version\": \"6.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.5.2.tgz\",\r\n      \"integrity\": \"sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==\"\r\n    },\r\n    \"range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\"\r\n    },\r\n    \"raw-body\": {\r\n      \"version\": \"2.5.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\r\n      \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\r\n      \"requires\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"dependencies\": {\r\n        \"depd\": {\r\n          \"version\": \"2.0.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n          \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\"\r\n        },\r\n        \"http-errors\": {\r\n          \"version\": \"2.0.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n          \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n          \"requires\": {\r\n            \"depd\": \"2.0.0\",\r\n            \"inherits\": \"2.0.4\",\r\n            \"setprototypeof\": \"1.2.0\",\r\n            \"statuses\": \"2.0.1\",\r\n            \"toidentifier\": \"1.0.1\"\r\n          }\r\n        },\r\n        \"inherits\": {\r\n          \"version\": \"2.0.4\",\r\n          \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n          \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n        },\r\n        \"setprototypeof\": {\r\n          \"version\": \"1.2.0\",\r\n          \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n          \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n        },\r\n        \"statuses\": {\r\n          \"version\": \"2.0.1\",\r\n          \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n          \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\"\r\n        }\r\n      }\r\n    },\r\n    \"readable-stream\": {\r\n      \"version\": \"2.3.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\r\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\r\n      \"requires\": {\r\n        \"core-util-is\": \"~1.0.0\",\r\n        \"inherits\": \"~2.0.3\",\r\n        \"isarray\": \"~1.0.0\",\r\n        \"process-nextick-args\": \"~2.0.0\",\r\n        \"safe-buffer\": \"~5.1.1\",\r\n        \"string_decoder\": \"~1.1.1\",\r\n        \"util-deprecate\": \"~1.0.1\"\r\n      }\r\n    },\r\n    \"safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"send\": {\r\n      \"version\": \"0.16.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.16.2.tgz\",\r\n      \"integrity\": \"sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==\",\r\n      \"requires\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"~1.1.2\",\r\n        \"destroy\": \"~1.0.4\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"~1.6.2\",\r\n        \"mime\": \"1.4.1\",\r\n        \"ms\": \"2.0.0\",\r\n        \"on-finished\": \"~2.3.0\",\r\n        \"range-parser\": \"~1.2.0\",\r\n        \"statuses\": \"~1.4.0\"\r\n      }\r\n    },\r\n    \"serve-static\": {\r\n      \"version\": \"1.13.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz\",\r\n      \"integrity\": \"sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==\",\r\n      \"requires\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.2\",\r\n        \"send\": \"0.16.2\"\r\n      }\r\n    },\r\n    \"setprototypeof\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==\"\r\n    },\r\n    \"side-channel\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==\",\r\n      \"requires\": {\r\n        \"call-bind\": \"^1.0.0\",\r\n        \"get-intrinsic\": \"^1.0.2\",\r\n        \"object-inspect\": \"^1.9.0\"\r\n      }\r\n    },\r\n    \"sqlstring\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz\",\r\n      \"integrity\": \"sha1-R1OT/56RR5rqYtyvDKPRSYOn+0A=\"\r\n    },\r\n    \"statuses\": {\r\n      \"version\": \"1.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz\",\r\n      \"integrity\": \"sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==\"\r\n    },\r\n    \"string_decoder\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\r\n      \"requires\": {\r\n        \"safe-buffer\": \"~5.1.0\"\r\n      }\r\n    },\r\n    \"toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\"\r\n    },\r\n    \"type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"requires\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      }\r\n    },\r\n    \"unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\"\r\n    },\r\n    \"util-deprecate\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\r\n      \"integrity\": \"sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\"\r\n    },\r\n    \"utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\"\r\n    },\r\n    \"vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\"\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/package-lock.json	(date 1649364755591)
@@ -315,6 +315,99 @@
         "node": ">= 0.10.0"
       }
     },
+    "node_modules/express/node_modules/body-parser": {
+      "version": "1.18.3",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",
+      "integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",
+      "dependencies": {
+        "bytes": "3.1.2",
+        "content-type": "~1.0.4",
+        "debug": "2.6.9",
+        "depd": "2.0.0",
+        "destroy": "1.2.0",
+        "http-errors": "2.0.0",
+        "iconv-lite": "0.4.24",
+        "on-finished": "2.4.1",
+        "qs": "6.10.3",
+        "raw-body": "2.5.1",
+        "type-is": "~1.6.18",
+        "unpipe": "1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.8",
+        "npm": "1.2.8000 || >= 1.4.16"
+      }
+    },
+    "node_modules/body-parser/node_modules/depd": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
+      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/body-parser/node_modules/destroy": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
+      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
+      "engines": {
+        "node": ">= 0.8",
+        "npm": "1.2.8000 || >= 1.4.16"
+      }
+    },
+    "node_modules/body-parser/node_modules/http-errors": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
+      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "dependencies": {
+        "depd": "2.0.0",
+        "inherits": "2.0.4",
+        "setprototypeof": "1.2.0",
+        "statuses": "2.0.1",
+        "toidentifier": "1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/body-parser/node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "node_modules/body-parser/node_modules/on-finished": {
+      "version": "2.4.1",
+      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
+      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
+      "dependencies": {
+        "ee-first": "1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/body-parser/node_modules/qs": {
+      "version": "6.10.3",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.10.3.tgz",
+      "integrity": "sha512-wr7M2E0OFRfIfJZjKGieI8lBKb7fRCH4Fv5KNPEs7gJ8jadvotdsS08PzOKR7opXhZ/Xkjtt3WF9g38drmyRqQ==",
+      "dependencies": {
+        "side-channel": "^1.0.4"
+      },
+      "engines": {
+        "node": ">=0.6"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/express/node_modules/bytes": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
+      "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/express/node_modules/body-parser": {
       "version": "1.18.3",
       "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",
@@ -367,9 +460,9 @@
       "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",
       "integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",
       "dependencies": {
-        "bytes": "3.0.0",
-        "http-errors": "1.6.3",
-        "iconv-lite": "0.4.23",
+        "bytes": "3.1.2",
+        "http-errors": "2.0.0",
+        "iconv-lite": "0.4.24",
         "unpipe": "1.0.0"
       },
       "engines": {
@@ -705,6 +798,47 @@
         "iconv-lite": "0.4.24",
         "unpipe": "1.0.0"
       },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/depd": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
+      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/http-errors": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
+      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "dependencies": {
+        "depd": "2.0.0",
+        "inherits": "2.0.4",
+        "setprototypeof": "1.2.0",
+        "statuses": "2.0.1",
+        "toidentifier": "1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
+    "node_modules/raw-body/node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+    },
+    "node_modules/raw-body/node_modules/setprototypeof": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
+      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
+    },
+    "node_modules/raw-body/node_modules/statuses": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
+      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
       "engines": {
         "node": ">= 0.8"
       }
Index: node_modules/body-parser/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># body-parser\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nNode.js body parsing middleware.\r\n\r\nParse incoming request bodies in a middleware before your handlers, available\r\nunder the `req.body` property.\r\n\r\n**Note** As `req.body`'s shape is based on user-controlled input, all\r\nproperties and values in this object are untrusted and should be validated\r\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\r\nways, for example the `foo` property may not be there or may not be a string,\r\nand `toString` may not be a function and instead a string or other user input.\r\n\r\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\r\n\r\n_This does not handle multipart bodies_, due to their complex and typically\r\nlarge nature. For multipart bodies, you may be interested in the following\r\nmodules:\r\n\r\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\r\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\r\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\r\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\r\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\r\n  * [multer](https://www.npmjs.org/package/multer#readme)\r\n\r\nThis module provides the following parsers:\r\n\r\n  * [JSON body parser](#bodyparserjsonoptions)\r\n  * [Raw body parser](#bodyparserrawoptions)\r\n  * [Text body parser](#bodyparsertextoptions)\r\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\r\n\r\nOther body parsers you might be interested in:\r\n\r\n- [body](https://www.npmjs.org/package/body#readme)\r\n- [co-body](https://www.npmjs.org/package/co-body#readme)\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install body-parser\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar bodyParser = require('body-parser')\r\n```\r\n\r\nThe `bodyParser` object exposes various factories to create middlewares. All\r\nmiddlewares will populate the `req.body` property with the parsed body when\r\nthe `Content-Type` request header matches the `type` option, or an empty\r\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\r\nor an error occurred.\r\n\r\nThe various errors returned by this module are described in the\r\n[errors section](#errors).\r\n\r\n### bodyParser.json([options])\r\n\r\nReturns middleware that only parses `json` and only looks at requests where\r\nthe `Content-Type` header matches the `type` option. This parser accepts any\r\nUnicode encoding of the body and supports automatic inflation of `gzip` and\r\n`deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`).\r\n\r\n#### Options\r\n\r\nThe `json` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### reviver\r\n\r\nThe `reviver` option is passed directly to `JSON.parse` as the second\r\nargument. You can find more information on this argument\r\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\r\n\r\n##### strict\r\n\r\nWhen set to `true`, will only accept arrays and objects; when `false` will\r\naccept anything `JSON.parse` accepts. Defaults to `true`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not a\r\nfunction, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `json`), a mime type (like `application/json`), or\r\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a truthy\r\nvalue. Defaults to `application/json`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.raw([options])\r\n\r\nReturns middleware that parses all bodies as a `Buffer` and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\r\nof the body.\r\n\r\n#### Options\r\n\r\nThe `raw` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function.\r\nIf not a function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\r\ncan be an extension name (like `bin`), a mime type (like\r\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\r\n`application/*`). If a function, the `type` option is called as `fn(req)`\r\nand the request is parsed if it returns a truthy value. Defaults to\r\n`application/octet-stream`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.text([options])\r\n\r\nReturns middleware that parses all bodies as a string and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` string containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a string of the\r\nbody.\r\n\r\n#### Options\r\n\r\nThe `text` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### defaultCharset\r\n\r\nSpecify the default character set for the text content if the charset is not\r\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\r\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a\r\ntruthy value. Defaults to `text/plain`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.urlencoded([options])\r\n\r\nReturns middleware that only parses `urlencoded` bodies and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser accepts only UTF-8 encoding of the body and supports automatic\r\ninflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This object will contain\r\nkey-value pairs, where the value can be a string or array (when `extended` is\r\n`false`), or any type (when `extended` is `true`).\r\n\r\n#### Options\r\n\r\nThe `urlencoded` function takes an optional `options` object that may contain\r\nany of the following keys:\r\n\r\n##### extended\r\n\r\nThe `extended` option allows to choose between parsing the URL-encoded data\r\nwith the `querystring` library (when `false`) or the `qs` library (when\r\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\r\nencoded into the URL-encoded format, allowing for a JSON-like experience\r\nwith URL-encoded. For more information, please\r\n[see the qs library](https://www.npmjs.org/package/qs#readme).\r\n\r\nDefaults to `true`, but using the default has been deprecated. Please\r\nresearch into the difference between `qs` and `querystring` and choose the\r\nappropriate setting.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### parameterLimit\r\n\r\nThe `parameterLimit` option controls the maximum number of parameters that\r\nare allowed in the URL-encoded data. If a request contains more parameters\r\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `urlencoded`), a mime type (like\r\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\r\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\r\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\r\nto `application/x-www-form-urlencoded`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n## Errors\r\n\r\nThe middlewares provided by this module create errors using the\r\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\r\nwill typically have a `status`/`statusCode` property that contains the suggested\r\nHTTP response code, an `expose` property to determine if the `message` property\r\nshould be displayed to the client, a `type` property to determine the type of\r\nerror without matching against the `message`, and a `body` property containing\r\nthe read body, if available.\r\n\r\nThe following are the common errors created, though any error can come through\r\nfor various reasons.\r\n\r\n### content encoding unsupported\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an encoding but the \"inflation\" option was set to `false`. The\r\n`status` property is set to `415`, the `type` property is set to\r\n`'encoding.unsupported'`, and the `charset` property will be set to the\r\nencoding that is unsupported.\r\n\r\n### entity parse failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nparsed by the middleware. The `status` property is set to `400`, the `type`\r\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\r\nthe entity value that failed parsing.\r\n\r\n### entity verify failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nfailed verification by the defined `verify` option. The `status` property is\r\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\r\n`body` property is set to the entity value that failed verification.\r\n\r\n### request aborted\r\n\r\nThis error will occur when the request is aborted by the client before reading\r\nthe body has finished. The `received` property will be set to the number of\r\nbytes received before the request was aborted and the `expected` property is\r\nset to the number of expected bytes. The `status` property is set to `400`\r\nand `type` property is set to `'request.aborted'`.\r\n\r\n### request entity too large\r\n\r\nThis error will occur when the request body's size is larger than the \"limit\"\r\noption. The `limit` property will be set to the byte limit and the `length`\r\nproperty will be set to the request body's length. The `status` property is\r\nset to `413` and the `type` property is set to `'entity.too.large'`.\r\n\r\n### request size did not match content length\r\n\r\nThis error will occur when the request's length did not match the length from\r\nthe `Content-Length` header. This typically occurs when the request is malformed,\r\ntypically when the `Content-Length` header was calculated based on characters\r\ninstead of bytes. The `status` property is set to `400` and the `type` property\r\nis set to `'request.size.invalid'`.\r\n\r\n### stream encoding should not be set\r\n\r\nThis error will occur when something called the `req.setEncoding` method prior\r\nto this middleware. This module operates directly on bytes only and you cannot\r\ncall `req.setEncoding` when using this module. The `status` property is set to\r\n`500` and the `type` property is set to `'stream.encoding.set'`.\r\n\r\n### stream is not readable\r\n\r\nThis error will occur when the request is no longer readable when this middleware\r\nattempts to read it. This typically means something other than a middleware from\r\nthis module read the reqest body already and the middleware was also configured to\r\nread the same request. The `status` property is set to `500` and the `type`\r\nproperty is set to `'stream.not.readable'`.\r\n\r\n### too many parameters\r\n\r\nThis error will occur when the content of the request exceeds the configured\r\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\r\n`413` and the `type` property is set to `'parameters.too.many'`.\r\n\r\n### unsupported charset \"BOGUS\"\r\n\r\nThis error will occur when the request had a charset parameter in the\r\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\r\nparser does not support it. The charset is contained in the message as well\r\nas in the `charset` property. The `status` property is set to `415`, the\r\n`type` property is set to `'charset.unsupported'`, and the `charset` property\r\nis set to the charset that is unsupported.\r\n\r\n### unsupported content encoding \"bogus\"\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an unsupported encoding. The encoding is contained in the message\r\nas well as in the `encoding` property. The `status` property is set to `415`,\r\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\r\nproperty is set to the encoding that is unsupported.\r\n\r\n## Examples\r\n\r\n### Express/Connect top-level generic\r\n\r\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\r\ntop-level middleware, which will parse the bodies of all incoming requests.\r\nThis is the simplest setup.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\napp.use(function (req, res) {\r\n  res.setHeader('Content-Type', 'text/plain')\r\n  res.write('you posted:\\n')\r\n  res.end(JSON.stringify(req.body, null, 2))\r\n})\r\n```\r\n\r\n### Express route-specific\r\n\r\nThis example demonstrates adding body parsers specifically to the routes that\r\nneed them. In general, this is the most recommended way to use body-parser with\r\nExpress.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// create application/json parser\r\nvar jsonParser = bodyParser.json()\r\n\r\n// create application/x-www-form-urlencoded parser\r\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\r\n\r\n// POST /login gets urlencoded bodies\r\napp.post('/login', urlencodedParser, function (req, res) {\r\n  res.send('welcome, ' + req.body.username)\r\n})\r\n\r\n// POST /api/users gets JSON bodies\r\napp.post('/api/users', jsonParser, function (req, res) {\r\n  // create user in req.body\r\n})\r\n```\r\n\r\n### Change accepted type for parsers\r\n\r\nAll the parsers accept a `type` option which allows you to change the\r\n`Content-Type` that the middleware will parse.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse various different custom JSON types as JSON\r\napp.use(bodyParser.json({ type: 'application/*+json' }))\r\n\r\n// parse some custom thing into a Buffer\r\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\r\n\r\n// parse an HTML body into a string\r\napp.use(bodyParser.text({ type: 'text/html' }))\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/body-parser.svg\r\n[npm-url]: https://npmjs.org/package/body-parser\r\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/body-parser/master.svg\r\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/body-parser.svg\r\n[downloads-url]: https://npmjs.org/package/body-parser\r\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci\r\n[github-actions-ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/README.md b/node_modules/body-parser/README.md
--- a/node_modules/body-parser/README.md	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/body-parser/README.md	(date 1649364747796)
@@ -462,3 +462,5 @@
 [downloads-url]: https://npmjs.org/package/body-parser
 [github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci
 [github-actions-ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml
+[github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci
+[github-actions-ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml
Index: views/success.ejs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/success.ejs b/views/success.ejs
new file mode 100644
--- /dev/null	(date 1649364755619)
+++ b/views/success.ejs	(date 1649364755619)
@@ -0,0 +1,2 @@
+<%- include('head.ejs')%>
+<p>Login successful</p>
\ No newline at end of file
Index: node_modules/raw-body/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"raw-body\",\r\n  \"description\": \"Get and validate the raw body of a readable stream.\",\r\n  \"version\": \"2.5.1\",\r\n  \"author\": \"Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Raynos <raynos2@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"stream-utils/raw-body\",\r\n  \"dependencies\": {\r\n    \"bytes\": \"3.1.2\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"iconv-lite\": \"0.4.24\",\r\n    \"unpipe\": \"1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"bluebird\": \"3.7.2\",\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.2.1\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"readable-stream\": \"2.3.7\",\r\n    \"safe-buffer\": \"5.2.1\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"SECURITY.md\",\r\n    \"index.d.ts\",\r\n    \"index.js\"\r\n  ],\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --trace-deprecation --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcovonly --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/raw-body/package.json b/node_modules/raw-body/package.json
--- a/node_modules/raw-body/package.json	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/raw-body/package.json	(date 1649364756196)
@@ -1,33 +1,67 @@
 {
-  "name": "raw-body",
-  "description": "Get and validate the raw body of a readable stream.",
-  "version": "2.5.1",
-  "author": "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)",
+  "_from": "raw-body@2.3.3",
+  "_id": "raw-body@2.3.3",
+  "_inBundle": false,
+  "_integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",
+  "_location": "/raw-body",
+  "_phantomChildren": {},
+  "_requested": {
+    "type": "version",
+    "registry": true,
+    "raw": "raw-body@2.3.3",
+    "name": "raw-body",
+    "escapedName": "raw-body",
+    "rawSpec": "2.3.3",
+    "saveSpec": null,
+    "fetchSpec": "2.3.3"
+  },
+  "_requiredBy": [
+    "/body-parser"
+  ],
+  "_resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",
+  "_shasum": "1b324ece6b5706e153855bc1148c65bb7f6ea0c3",
+  "_spec": "raw-body@2.3.3",
+  "_where": "C:\\Users\\bsp5205\\WebstormProjects\\421Proj\\node_modules\\body-parser",
+  "author": {
+    "name": "Jonathan Ong",
+    "email": "me@jongleberry.com",
+    "url": "http://jongleberry.com"
+  },
+  "bugs": {
+    "url": "https://github.com/stream-utils/raw-body/issues"
+  },
+  "bundleDependencies": false,
   "contributors": [
-    "Douglas Christopher Wilson <doug@somethingdoug.com>",
-    "Raynos <raynos2@gmail.com>"
+    {
+      "name": "Douglas Christopher Wilson",
+      "email": "doug@somethingdoug.com"
+    },
+    {
+      "name": "Raynos",
+      "email": "raynos2@gmail.com"
+    }
   ],
-  "license": "MIT",
-  "repository": "stream-utils/raw-body",
   "dependencies": {
-    "bytes": "3.1.2",
-    "http-errors": "2.0.0",
-    "iconv-lite": "0.4.24",
+    "bytes": "3.0.0",
+    "http-errors": "1.6.3",
+    "iconv-lite": "0.4.23",
     "unpipe": "1.0.0"
   },
+  "deprecated": false,
+  "description": "Get and validate the raw body of a readable stream.",
   "devDependencies": {
-    "bluebird": "3.7.2",
-    "eslint": "7.32.0",
-    "eslint-config-standard": "14.1.1",
-    "eslint-plugin-import": "2.25.4",
-    "eslint-plugin-markdown": "2.2.1",
-    "eslint-plugin-node": "11.1.0",
-    "eslint-plugin-promise": "5.2.0",
-    "eslint-plugin-standard": "4.1.0",
-    "mocha": "9.2.1",
-    "nyc": "15.1.0",
-    "readable-stream": "2.3.7",
-    "safe-buffer": "5.2.1"
+    "bluebird": "3.5.1",
+    "eslint": "4.19.1",
+    "eslint-config-standard": "11.0.0",
+    "eslint-plugin-import": "2.11.0",
+    "eslint-plugin-markdown": "1.0.0-beta.6",
+    "eslint-plugin-node": "6.0.1",
+    "eslint-plugin-promise": "3.7.0",
+    "eslint-plugin-standard": "3.1.0",
+    "istanbul": "0.4.5",
+    "mocha": "2.5.3",
+    "readable-stream": "2.3.6",
+    "safe-buffer": "5.1.2"
   },
   "engines": {
     "node": ">= 0.8"
@@ -36,14 +70,21 @@
     "HISTORY.md",
     "LICENSE",
     "README.md",
-    "SECURITY.md",
     "index.d.ts",
     "index.js"
   ],
+  "homepage": "https://github.com/stream-utils/raw-body#readme",
+  "license": "MIT",
+  "name": "raw-body",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/stream-utils/raw-body.git"
+  },
   "scripts": {
-    "lint": "eslint .",
+    "lint": "eslint --plugin markdown --ext js,md .",
     "test": "mocha --trace-deprecation --reporter spec --bail --check-leaks test/",
-    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
-    "test-cov": "nyc --reporter=html --reporter=text npm test"
-  }
+    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --trace-deprecation --reporter dot --check-leaks test/",
+    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --trace-deprecation --reporter spec --check-leaks test/"
+  },
+  "version": "2.3.3"
 }
Index: node_modules/raw-body/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># raw-body\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build status][github-actions-ci-image]][github-actions-ci-url]\r\n[![Test coverage][coveralls-image]][coveralls-url]\r\n\r\nGets the entire buffer of a stream either as a `Buffer` or a string.\r\nValidates the stream's length against an expected length and maximum limit.\r\nIdeal for parsing request bodies.\r\n\r\n## Install\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```sh\r\n$ npm install raw-body\r\n```\r\n\r\n### TypeScript\r\n\r\nThis module includes a [TypeScript](https://www.typescriptlang.org/)\r\ndeclaration file to enable auto complete in compatible editors and type\r\ninformation for TypeScript projects. This module depends on the Node.js\r\ntypes, so install `@types/node`:\r\n\r\n```sh\r\n$ npm install @types/node\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar getRawBody = require('raw-body')\r\n```\r\n\r\n### getRawBody(stream, [options], [callback])\r\n\r\n**Returns a promise if no callback specified and global `Promise` exists.**\r\n\r\nOptions:\r\n\r\n- `length` - The length of the stream.\r\n  If the contents of the stream do not add up to this length,\r\n  an `400` error code is returned.\r\n- `limit` - The byte limit of the body.\r\n  This is the number of bytes or any string format supported by\r\n  [bytes](https://www.npmjs.com/package/bytes),\r\n  for example `1000`, `'500kb'` or `'3mb'`.\r\n  If the body ends up being larger than this limit,\r\n  a `413` error code is returned.\r\n- `encoding` - The encoding to use to decode the body into a string.\r\n  By default, a `Buffer` instance will be returned when no encoding is specified.\r\n  Most likely, you want `utf-8`, so setting `encoding` to `true` will decode as `utf-8`.\r\n  You can use any type of encoding supported by [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme).\r\n\r\nYou can also pass a string in place of options to just specify the encoding.\r\n\r\nIf an error occurs, the stream will be paused, everything unpiped,\r\nand you are responsible for correctly disposing the stream.\r\nFor HTTP requests, you may need to finish consuming the stream if\r\nyou want to keep the socket open for future requests. For streams\r\nthat use file descriptors, you should `stream.destroy()` or\r\n`stream.close()` to prevent leaks.\r\n\r\n## Errors\r\n\r\nThis module creates errors depending on the error condition during reading.\r\nThe error may be an error from the underlying Node.js implementation, but is\r\notherwise an error created by this module, which has the following attributes:\r\n\r\n  * `limit` - the limit in bytes\r\n  * `length` and `expected` - the expected length of the stream\r\n  * `received` - the received bytes\r\n  * `encoding` - the invalid encoding\r\n  * `status` and `statusCode` - the corresponding status code for the error\r\n  * `type` - the error type\r\n\r\n### Types\r\n\r\nThe errors from this module have a `type` property which allows for the programmatic\r\ndetermination of the type of error returned.\r\n\r\n#### encoding.unsupported\r\n\r\nThis error will occur when the `encoding` option is specified, but the value does\r\nnot map to an encoding supported by the [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme)\r\nmodule.\r\n\r\n#### entity.too.large\r\n\r\nThis error will occur when the `limit` option is specified, but the stream has\r\nan entity that is larger.\r\n\r\n#### request.aborted\r\n\r\nThis error will occur when the request stream is aborted by the client before\r\nreading the body has finished.\r\n\r\n#### request.size.invalid\r\n\r\nThis error will occur when the `length` option is specified, but the stream has\r\nemitted more bytes.\r\n\r\n#### stream.encoding.set\r\n\r\nThis error will occur when the given stream has an encoding set on it, making it\r\na decoded stream. The stream should not have an encoding set and is expected to\r\nemit `Buffer` objects.\r\n\r\n#### stream.not.readable\r\n\r\nThis error will occur when the given stream is not readable.\r\n\r\n## Examples\r\n\r\n### Simple Express example\r\n\r\n```js\r\nvar contentType = require('content-type')\r\nvar express = require('express')\r\nvar getRawBody = require('raw-body')\r\n\r\nvar app = express()\r\n\r\napp.use(function (req, res, next) {\r\n  getRawBody(req, {\r\n    length: req.headers['content-length'],\r\n    limit: '1mb',\r\n    encoding: contentType.parse(req).parameters.charset\r\n  }, function (err, string) {\r\n    if (err) return next(err)\r\n    req.text = string\r\n    next()\r\n  })\r\n})\r\n\r\n// now access req.text\r\n```\r\n\r\n### Simple Koa example\r\n\r\n```js\r\nvar contentType = require('content-type')\r\nvar getRawBody = require('raw-body')\r\nvar koa = require('koa')\r\n\r\nvar app = koa()\r\n\r\napp.use(function * (next) {\r\n  this.text = yield getRawBody(this.req, {\r\n    length: this.req.headers['content-length'],\r\n    limit: '1mb',\r\n    encoding: contentType.parse(this.req).parameters.charset\r\n  })\r\n  yield next\r\n})\r\n\r\n// now access this.text\r\n```\r\n\r\n### Using as a promise\r\n\r\nTo use this library as a promise, simply omit the `callback` and a promise is\r\nreturned, provided that a global `Promise` is defined.\r\n\r\n```js\r\nvar getRawBody = require('raw-body')\r\nvar http = require('http')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  getRawBody(req)\r\n    .then(function (buf) {\r\n      res.statusCode = 200\r\n      res.end(buf.length + ' bytes submitted')\r\n    })\r\n    .catch(function (err) {\r\n      res.statusCode = 500\r\n      res.end(err.message)\r\n    })\r\n})\r\n\r\nserver.listen(3000)\r\n```\r\n\r\n### Using with TypeScript\r\n\r\n```ts\r\nimport * as getRawBody from 'raw-body';\r\nimport * as http from 'http';\r\n\r\nconst server = http.createServer((req, res) => {\r\n  getRawBody(req)\r\n  .then((buf) => {\r\n    res.statusCode = 200;\r\n    res.end(buf.length + ' bytes submitted');\r\n  })\r\n  .catch((err) => {\r\n    res.statusCode = err.statusCode;\r\n    res.end(err.message);\r\n  });\r\n});\r\n\r\nserver.listen(3000);\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/raw-body.svg\r\n[npm-url]: https://npmjs.org/package/raw-body\r\n[node-version-image]: https://img.shields.io/node/v/raw-body.svg\r\n[node-version-url]: https://nodejs.org/en/download/\r\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/raw-body/master.svg\r\n[coveralls-url]: https://coveralls.io/r/stream-utils/raw-body?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/raw-body.svg\r\n[downloads-url]: https://npmjs.org/package/raw-body\r\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/raw-body/ci/master?label=ci\r\n[github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/raw-body/README.md b/node_modules/raw-body/README.md
--- a/node_modules/raw-body/README.md	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/raw-body/README.md	(date 1649364758053)
@@ -221,3 +221,5 @@
 [downloads-url]: https://npmjs.org/package/raw-body
 [github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/raw-body/ci/master?label=ci
 [github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci
+[github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/raw-body/ci/master?label=ci
+[github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci
Index: node_modules/raw-body/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * raw-body\r\n * Copyright(c) 2013-2014 Jonathan Ong\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar asyncHooks = tryRequireAsyncHooks()\r\nvar bytes = require('bytes')\r\nvar createError = require('http-errors')\r\nvar iconv = require('iconv-lite')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = getRawBody\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\r\n\r\n/**\r\n * Get the decoder for a given encoding.\r\n *\r\n * @param {string} encoding\r\n * @private\r\n */\r\n\r\nfunction getDecoder (encoding) {\r\n  if (!encoding) return null\r\n\r\n  try {\r\n    return iconv.getDecoder(encoding)\r\n  } catch (e) {\r\n    // error getting decoder\r\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\r\n\r\n    // the encoding was not found\r\n    throw createError(415, 'specified encoding unsupported', {\r\n      encoding: encoding,\r\n      type: 'encoding.unsupported'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the raw body of a stream (typically HTTP).\r\n *\r\n * @param {object} stream\r\n * @param {object|string|function} [options]\r\n * @param {function} [callback]\r\n * @public\r\n */\r\n\r\nfunction getRawBody (stream, options, callback) {\r\n  var done = callback\r\n  var opts = options || {}\r\n\r\n  if (options === true || typeof options === 'string') {\r\n    // short cut for encoding\r\n    opts = {\r\n      encoding: options\r\n    }\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    done = options\r\n    opts = {}\r\n  }\r\n\r\n  // validate callback is a function, if provided\r\n  if (done !== undefined && typeof done !== 'function') {\r\n    throw new TypeError('argument callback must be a function')\r\n  }\r\n\r\n  // require the callback without promises\r\n  if (!done && !global.Promise) {\r\n    throw new TypeError('argument callback is required')\r\n  }\r\n\r\n  // get encoding\r\n  var encoding = opts.encoding !== true\r\n    ? opts.encoding\r\n    : 'utf-8'\r\n\r\n  // convert the limit to an integer\r\n  var limit = bytes.parse(opts.limit)\r\n\r\n  // convert the expected length to an integer\r\n  var length = opts.length != null && !isNaN(opts.length)\r\n    ? parseInt(opts.length, 10)\r\n    : null\r\n\r\n  if (done) {\r\n    // classic callback style\r\n    return readStream(stream, encoding, length, limit, wrap(done))\r\n  }\r\n\r\n  return new Promise(function executor (resolve, reject) {\r\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\r\n      if (err) return reject(err)\r\n      resolve(buf)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Halt a stream.\r\n *\r\n * @param {Object} stream\r\n * @private\r\n */\r\n\r\nfunction halt (stream) {\r\n  // unpipe everything from the stream\r\n  unpipe(stream)\r\n\r\n  // pause stream\r\n  if (typeof stream.pause === 'function') {\r\n    stream.pause()\r\n  }\r\n}\r\n\r\n/**\r\n * Read the data from the stream.\r\n *\r\n * @param {object} stream\r\n * @param {string} encoding\r\n * @param {number} length\r\n * @param {number} limit\r\n * @param {function} callback\r\n * @public\r\n */\r\n\r\nfunction readStream (stream, encoding, length, limit, callback) {\r\n  var complete = false\r\n  var sync = true\r\n\r\n  // check the length and limit options.\r\n  // note: we intentionally leave the stream paused,\r\n  // so users should handle the stream themselves.\r\n  if (limit !== null && length !== null && length > limit) {\r\n    return done(createError(413, 'request entity too large', {\r\n      expected: length,\r\n      length: length,\r\n      limit: limit,\r\n      type: 'entity.too.large'\r\n    }))\r\n  }\r\n\r\n  // streams1: assert request encoding is buffer.\r\n  // streams2+: assert the stream encoding is buffer.\r\n  //   stream._decoder: streams1\r\n  //   state.encoding: streams2\r\n  //   state.decoder: streams2, specifically < 0.10.6\r\n  var state = stream._readableState\r\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\r\n    // developer error\r\n    return done(createError(500, 'stream encoding should not be set', {\r\n      type: 'stream.encoding.set'\r\n    }))\r\n  }\r\n\r\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\r\n    return done(createError(500, 'stream is not readable', {\r\n      type: 'stream.not.readable'\r\n    }))\r\n  }\r\n\r\n  var received = 0\r\n  var decoder\r\n\r\n  try {\r\n    decoder = getDecoder(encoding)\r\n  } catch (err) {\r\n    return done(err)\r\n  }\r\n\r\n  var buffer = decoder\r\n    ? ''\r\n    : []\r\n\r\n  // attach listeners\r\n  stream.on('aborted', onAborted)\r\n  stream.on('close', cleanup)\r\n  stream.on('data', onData)\r\n  stream.on('end', onEnd)\r\n  stream.on('error', onEnd)\r\n\r\n  // mark sync section complete\r\n  sync = false\r\n\r\n  function done () {\r\n    var args = new Array(arguments.length)\r\n\r\n    // copy arguments\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n\r\n    // mark complete\r\n    complete = true\r\n\r\n    if (sync) {\r\n      process.nextTick(invokeCallback)\r\n    } else {\r\n      invokeCallback()\r\n    }\r\n\r\n    function invokeCallback () {\r\n      cleanup()\r\n\r\n      if (args[0]) {\r\n        // halt the stream on error\r\n        halt(stream)\r\n      }\r\n\r\n      callback.apply(null, args)\r\n    }\r\n  }\r\n\r\n  function onAborted () {\r\n    if (complete) return\r\n\r\n    done(createError(400, 'request aborted', {\r\n      code: 'ECONNABORTED',\r\n      expected: length,\r\n      length: length,\r\n      received: received,\r\n      type: 'request.aborted'\r\n    }))\r\n  }\r\n\r\n  function onData (chunk) {\r\n    if (complete) return\r\n\r\n    received += chunk.length\r\n\r\n    if (limit !== null && received > limit) {\r\n      done(createError(413, 'request entity too large', {\r\n        limit: limit,\r\n        received: received,\r\n        type: 'entity.too.large'\r\n      }))\r\n    } else if (decoder) {\r\n      buffer += decoder.write(chunk)\r\n    } else {\r\n      buffer.push(chunk)\r\n    }\r\n  }\r\n\r\n  function onEnd (err) {\r\n    if (complete) return\r\n    if (err) return done(err)\r\n\r\n    if (length !== null && received !== length) {\r\n      done(createError(400, 'request size did not match content length', {\r\n        expected: length,\r\n        length: length,\r\n        received: received,\r\n        type: 'request.size.invalid'\r\n      }))\r\n    } else {\r\n      var string = decoder\r\n        ? buffer + (decoder.end() || '')\r\n        : Buffer.concat(buffer)\r\n      done(null, string)\r\n    }\r\n  }\r\n\r\n  function cleanup () {\r\n    buffer = null\r\n\r\n    stream.removeListener('aborted', onAborted)\r\n    stream.removeListener('data', onData)\r\n    stream.removeListener('end', onEnd)\r\n    stream.removeListener('error', onEnd)\r\n    stream.removeListener('close', cleanup)\r\n  }\r\n}\r\n\r\n/**\r\n * Try to require async_hooks\r\n * @private\r\n */\r\n\r\nfunction tryRequireAsyncHooks () {\r\n  try {\r\n    return require('async_hooks')\r\n  } catch (e) {\r\n    return {}\r\n  }\r\n}\r\n\r\n/**\r\n * Wrap function with async resource, if possible.\r\n * AsyncResource.bind static method backported.\r\n * @private\r\n */\r\n\r\nfunction wrap (fn) {\r\n  var res\r\n\r\n  // create anonymous resource\r\n  if (asyncHooks.AsyncResource) {\r\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\r\n  }\r\n\r\n  // incompatible node.js\r\n  if (!res || !res.runInAsyncScope) {\r\n    return fn\r\n  }\r\n\r\n  // return bound function\r\n  return res.runInAsyncScope.bind(res, fn, null)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/raw-body/index.js b/node_modules/raw-body/index.js
--- a/node_modules/raw-body/index.js	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/raw-body/index.js	(date 1649364758089)
@@ -180,6 +180,12 @@
     }))
   }
 
+  if (typeof stream.readable !== 'undefined' && !stream.readable) {
+    return done(createError(500, 'stream is not readable', {
+      type: 'stream.not.readable'
+    }))
+  }
+
   var received = 0
   var decoder
 
@@ -327,3 +333,39 @@
   // return bound function
   return res.runInAsyncScope.bind(res, fn, null)
 }
+
+/**
+ * Try to require async_hooks
+ * @private
+ */
+
+function tryRequireAsyncHooks () {
+  try {
+    return require('async_hooks')
+  } catch (e) {
+    return {}
+  }
+}
+
+/**
+ * Wrap function with async resource, if possible.
+ * AsyncResource.bind static method backported.
+ * @private
+ */
+
+function wrap (fn) {
+  var res
+
+  // create anonymous resource
+  if (asyncHooks.AsyncResource) {
+    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')
+  }
+
+  // incompatible node.js
+  if (!res || !res.runInAsyncScope) {
+    return fn
+  }
+
+  // return bound function
+  return res.runInAsyncScope.bind(res, fn, null)
+}
Index: node_modules/bytes/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"bytes\",\r\n  \"description\": \"Utility to parse a string bytes to bytes and vice-versa\",\r\n  \"version\": \"3.1.2\",\r\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)\",\r\n  \"contributors\": [\r\n    \"Jed Watson <jed.watson@me.com>\",\r\n    \"Théo FIDRY <theo.fidry@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"keywords\": [\r\n    \"byte\",\r\n    \"bytes\",\r\n    \"utility\",\r\n    \"parse\",\r\n    \"parser\",\r\n    \"convert\",\r\n    \"converter\"\r\n  ],\r\n  \"repository\": \"visionmedia/bytes.js\",\r\n  \"devDependencies\": {\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"mocha\": \"9.2.0\",\r\n    \"nyc\": \"15.1.0\"\r\n  },\r\n  \"files\": [\r\n    \"History.md\",\r\n    \"LICENSE\",\r\n    \"Readme.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --check-leaks --reporter spec\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/bytes/package.json b/node_modules/bytes/package.json
--- a/node_modules/bytes/package.json	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/bytes/package.json	(date 1649364748329)
@@ -1,13 +1,63 @@
 {
-  "name": "bytes",
+  "_from": "bytes@3.0.0",
+  "_id": "bytes@3.0.0",
+  "_inBundle": false,
+  "_integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=",
+  "_location": "/bytes",
+  "_phantomChildren": {},
+  "_requested": {
+    "type": "version",
+    "registry": true,
+    "raw": "bytes@3.0.0",
+    "name": "bytes",
+    "escapedName": "bytes",
+    "rawSpec": "3.0.0",
+    "saveSpec": null,
+    "fetchSpec": "3.0.0"
+  },
+  "_requiredBy": [
+    "/body-parser",
+    "/raw-body"
+  ],
+  "_resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
+  "_shasum": "d32815404d689699f85a4ea4fa8755dd13a96048",
+  "_spec": "bytes@3.0.0",
+  "_where": "C:\\Users\\bsp5205\\WebstormProjects\\421Proj\\node_modules\\body-parser",
+  "author": {
+    "name": "TJ Holowaychuk",
+    "email": "tj@vision-media.ca",
+    "url": "http://tjholowaychuk.com"
+  },
+  "bugs": {
+    "url": "https://github.com/visionmedia/bytes.js/issues"
+  },
+  "bundleDependencies": false,
+  "contributors": [
+    {
+      "name": "Jed Watson",
+      "email": "jed.watson@me.com"
+    },
+    {
+      "name": "Théo FIDRY",
+      "email": "theo.fidry@gmail.com"
+    }
+  ],
+  "deprecated": false,
   "description": "Utility to parse a string bytes to bytes and vice-versa",
-  "version": "3.1.2",
-  "author": "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)",
-  "contributors": [
-    "Jed Watson <jed.watson@me.com>",
-    "Théo FIDRY <theo.fidry@gmail.com>"
+  "devDependencies": {
+    "mocha": "2.5.3",
+    "nyc": "10.3.2"
+  },
+  "engines": {
+    "node": ">= 0.8"
+  },
+  "files": [
+    "History.md",
+    "LICENSE",
+    "Readme.md",
+    "index.js"
   ],
-  "license": "MIT",
+  "homepage": "https://github.com/visionmedia/bytes.js#readme",
   "keywords": [
     "byte",
     "bytes",
@@ -17,26 +67,16 @@
     "convert",
     "converter"
   ],
-  "repository": "visionmedia/bytes.js",
-  "devDependencies": {
-    "eslint": "7.32.0",
-    "eslint-plugin-markdown": "2.2.1",
-    "mocha": "9.2.0",
-    "nyc": "15.1.0"
-  },
-  "files": [
-    "History.md",
-    "LICENSE",
-    "Readme.md",
-    "index.js"
-  ],
-  "engines": {
-    "node": ">= 0.8"
+  "license": "MIT",
+  "name": "bytes",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/visionmedia/bytes.js.git"
   },
   "scripts": {
-    "lint": "eslint .",
     "test": "mocha --check-leaks --reporter spec",
-    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
+    "test-ci": "nyc --reporter=text npm test",
     "test-cov": "nyc --reporter=html --reporter=text npm test"
-  }
+  },
+  "version": "3.0.0"
 }
Index: node_modules/bytes/Readme.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Bytes utility\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][ci-image]][ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nUtility to parse a string bytes (ex: `1TB`) to bytes (`1099511627776`) and vice-versa.\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```bash\r\n$ npm install bytes\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar bytes = require('bytes');\r\n```\r\n\r\n#### bytes(number｜string value, [options]): number｜string｜null\r\n\r\nDefault export function. Delegates to either `bytes.format` or `bytes.parse` based on the type of `value`.\r\n\r\n**Arguments**\r\n\r\n| Name    | Type     | Description        |\r\n|---------|----------|--------------------|\r\n| value   | `number`｜`string` | Number value to format or string value to parse |\r\n| options | `Object` | Conversion options for `format` |\r\n\r\n**Returns**\r\n\r\n| Name    | Type             | Description                                     |\r\n|---------|------------------|-------------------------------------------------|\r\n| results | `string`｜`number`｜`null` | Return null upon error. Numeric value in bytes, or string value otherwise. |\r\n\r\n**Example**\r\n\r\n```js\r\nbytes(1024);\r\n// output: '1KB'\r\n\r\nbytes('1KB');\r\n// output: 1024\r\n```\r\n\r\n#### bytes.format(number value, [options]): string｜null\r\n\r\nFormat the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is\r\n rounded.\r\n\r\n**Arguments**\r\n\r\n| Name    | Type     | Description        |\r\n|---------|----------|--------------------|\r\n| value   | `number` | Value in bytes     |\r\n| options | `Object` | Conversion options |\r\n\r\n**Options**\r\n\r\n| Property          | Type   | Description                                                                             |\r\n|-------------------|--------|-----------------------------------------------------------------------------------------|\r\n| decimalPlaces | `number`｜`null` | Maximum number of decimal places to include in output. Default value to `2`. |\r\n| fixedDecimals | `boolean`｜`null` | Whether to always display the maximum number of decimal places. Default value to `false` |\r\n| thousandsSeparator | `string`｜`null` | Example of values: `' '`, `','` and `'.'`... Default value to `''`. |\r\n| unit | `string`｜`null` | The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to `''` (which means auto detect). |\r\n| unitSeparator | `string`｜`null` | Separator to use between number and unit. Default value to `''`. |\r\n\r\n**Returns**\r\n\r\n| Name    | Type             | Description                                     |\r\n|---------|------------------|-------------------------------------------------|\r\n| results | `string`｜`null` | Return null upon error. String value otherwise. |\r\n\r\n**Example**\r\n\r\n```js\r\nbytes.format(1024);\r\n// output: '1KB'\r\n\r\nbytes.format(1000);\r\n// output: '1000B'\r\n\r\nbytes.format(1000, {thousandsSeparator: ' '});\r\n// output: '1 000B'\r\n\r\nbytes.format(1024 * 1.7, {decimalPlaces: 0});\r\n// output: '2KB'\r\n\r\nbytes.format(1024, {unitSeparator: ' '});\r\n// output: '1 KB'\r\n```\r\n\r\n#### bytes.parse(string｜number value): number｜null\r\n\r\nParse the string value into an integer in bytes. If no unit is given, or `value`\r\nis a number, it is assumed the value is in bytes.\r\n\r\nSupported units and abbreviations are as follows and are case-insensitive:\r\n\r\n  * `b` for bytes\r\n  * `kb` for kilobytes\r\n  * `mb` for megabytes\r\n  * `gb` for gigabytes\r\n  * `tb` for terabytes\r\n  * `pb` for petabytes\r\n\r\nThe units are in powers of two, not ten. This means 1kb = 1024b according to this parser.\r\n\r\n**Arguments**\r\n\r\n| Name          | Type   | Description        |\r\n|---------------|--------|--------------------|\r\n| value   | `string`｜`number` | String to parse, or number in bytes.   |\r\n\r\n**Returns**\r\n\r\n| Name    | Type        | Description             |\r\n|---------|-------------|-------------------------|\r\n| results | `number`｜`null` | Return null upon error. Value in bytes otherwise. |\r\n\r\n**Example**\r\n\r\n```js\r\nbytes.parse('1KB');\r\n// output: 1024\r\n\r\nbytes.parse('1024');\r\n// output: 1024\r\n\r\nbytes.parse(1024);\r\n// output: 1024\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[ci-image]: https://badgen.net/github/checks/visionmedia/bytes.js/master?label=ci\r\n[ci-url]: https://github.com/visionmedia/bytes.js/actions?query=workflow%3Aci\r\n[coveralls-image]: https://badgen.net/coveralls/c/github/visionmedia/bytes.js/master\r\n[coveralls-url]: https://coveralls.io/r/visionmedia/bytes.js?branch=master\r\n[downloads-image]: https://badgen.net/npm/dm/bytes\r\n[downloads-url]: https://npmjs.org/package/bytes\r\n[npm-image]: https://badgen.net/npm/v/bytes\r\n[npm-url]: https://npmjs.org/package/bytes\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/bytes/Readme.md b/node_modules/bytes/Readme.md
--- a/node_modules/bytes/Readme.md	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/bytes/Readme.md	(date 1649364751557)
@@ -2,7 +2,7 @@
 
 [![NPM Version][npm-image]][npm-url]
 [![NPM Downloads][downloads-image]][downloads-url]
-[![Build Status][ci-image]][ci-url]
+[![Build Status][travis-image]][travis-url]
 [![Test Coverage][coveralls-image]][coveralls-url]
 
 Utility to parse a string bytes (ex: `1TB`) to bytes (`1099511627776`) and vice-versa.
@@ -23,33 +23,6 @@
 var bytes = require('bytes');
 ```
 
-#### bytes(number｜string value, [options]): number｜string｜null
-
-Default export function. Delegates to either `bytes.format` or `bytes.parse` based on the type of `value`.
-
-**Arguments**
-
-| Name    | Type     | Description        |
-|---------|----------|--------------------|
-| value   | `number`｜`string` | Number value to format or string value to parse |
-| options | `Object` | Conversion options for `format` |
-
-**Returns**
-
-| Name    | Type             | Description                                     |
-|---------|------------------|-------------------------------------------------|
-| results | `string`｜`number`｜`null` | Return null upon error. Numeric value in bytes, or string value otherwise. |
-
-**Example**
-
-```js
-bytes(1024);
-// output: '1KB'
-
-bytes('1KB');
-// output: 1024
-```
-
 #### bytes.format(number value, [options]): string｜null
 
 Format the given value in bytes into a string. If the value is negative, it is kept as such. If it is a float, it is
@@ -68,7 +41,7 @@
 |-------------------|--------|-----------------------------------------------------------------------------------------|
 | decimalPlaces | `number`｜`null` | Maximum number of decimal places to include in output. Default value to `2`. |
 | fixedDecimals | `boolean`｜`null` | Whether to always display the maximum number of decimal places. Default value to `false` |
-| thousandsSeparator | `string`｜`null` | Example of values: `' '`, `','` and `'.'`... Default value to `''`. |
+| thousandsSeparator | `string`｜`null` | Example of values: `' '`, `','` and `.`... Default value to `''`. |
 | unit | `string`｜`null` | The unit in which the result will be returned (B/KB/MB/GB/TB). Default value to `''` (which means auto detect). |
 | unitSeparator | `string`｜`null` | Separator to use between number and unit. Default value to `''`. |
 
@@ -81,20 +54,21 @@
 **Example**
 
 ```js
-bytes.format(1024);
+bytes(1024);
 // output: '1KB'
 
-bytes.format(1000);
+bytes(1000);
 // output: '1000B'
 
-bytes.format(1000, {thousandsSeparator: ' '});
+bytes(1000, {thousandsSeparator: ' '});
 // output: '1 000B'
 
-bytes.format(1024 * 1.7, {decimalPlaces: 0});
+bytes(1024 * 1.7, {decimalPlaces: 0});
 // output: '2KB'
 
-bytes.format(1024, {unitSeparator: ' '});
+bytes(1024, {unitSeparator: ' '});
 // output: '1 KB'
+
 ```
 
 #### bytes.parse(string｜number value): number｜null
@@ -109,7 +83,6 @@
   * `mb` for megabytes
   * `gb` for gigabytes
   * `tb` for terabytes
-  * `pb` for petabytes
 
 The units are in powers of two, not ten. This means 1kb = 1024b according to this parser.
 
@@ -128,25 +101,25 @@
 **Example**
 
 ```js
-bytes.parse('1KB');
+bytes('1KB');
 // output: 1024
 
-bytes.parse('1024');
+bytes('1024');
 // output: 1024
 
-bytes.parse(1024);
+bytes(1024);
 // output: 1024
 ```
 
-## License
+## License 
 
 [MIT](LICENSE)
 
-[ci-image]: https://badgen.net/github/checks/visionmedia/bytes.js/master?label=ci
-[ci-url]: https://github.com/visionmedia/bytes.js/actions?query=workflow%3Aci
-[coveralls-image]: https://badgen.net/coveralls/c/github/visionmedia/bytes.js/master
-[coveralls-url]: https://coveralls.io/r/visionmedia/bytes.js?branch=master
-[downloads-image]: https://badgen.net/npm/dm/bytes
+[downloads-image]: https://img.shields.io/npm/dm/bytes.svg
 [downloads-url]: https://npmjs.org/package/bytes
-[npm-image]: https://badgen.net/npm/v/bytes
+[npm-image]: https://img.shields.io/npm/v/bytes.svg
 [npm-url]: https://npmjs.org/package/bytes
+[travis-image]: https://img.shields.io/travis/visionmedia/bytes.js/master.svg
+[travis-url]: https://travis-ci.org/visionmedia/bytes.js
+[coveralls-image]: https://img.shields.io/coveralls/visionmedia/bytes.js/master.svg
+[coveralls-url]: https://coveralls.io/r/visionmedia/bytes.js?branch=master
Index: node_modules/body-parser/lib/read.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * body-parser\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar createError = require('http-errors')\r\nvar destroy = require('destroy')\r\nvar getBody = require('raw-body')\r\nvar iconv = require('iconv-lite')\r\nvar onFinished = require('on-finished')\r\nvar unpipe = require('unpipe')\r\nvar zlib = require('zlib')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = read\r\n\r\n/**\r\n * Read a request into a buffer and parse.\r\n *\r\n * @param {object} req\r\n * @param {object} res\r\n * @param {function} next\r\n * @param {function} parse\r\n * @param {function} debug\r\n * @param {object} options\r\n * @private\r\n */\r\n\r\nfunction read (req, res, next, parse, debug, options) {\r\n  var length\r\n  var opts = options\r\n  var stream\r\n\r\n  // flag as parsed\r\n  req._body = true\r\n\r\n  // read options\r\n  var encoding = opts.encoding !== null\r\n    ? opts.encoding\r\n    : null\r\n  var verify = opts.verify\r\n\r\n  try {\r\n    // get the content stream\r\n    stream = contentstream(req, debug, opts.inflate)\r\n    length = stream.length\r\n    stream.length = undefined\r\n  } catch (err) {\r\n    return next(err)\r\n  }\r\n\r\n  // set raw-body options\r\n  opts.length = length\r\n  opts.encoding = verify\r\n    ? null\r\n    : encoding\r\n\r\n  // assert charset is supported\r\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\r\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\r\n      charset: encoding.toLowerCase(),\r\n      type: 'charset.unsupported'\r\n    }))\r\n  }\r\n\r\n  // read body\r\n  debug('read body')\r\n  getBody(stream, opts, function (error, body) {\r\n    if (error) {\r\n      var _error\r\n\r\n      if (error.type === 'encoding.unsupported') {\r\n        // echo back charset\r\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\r\n          charset: encoding.toLowerCase(),\r\n          type: 'charset.unsupported'\r\n        })\r\n      } else {\r\n        // set status code on error\r\n        _error = createError(400, error)\r\n      }\r\n\r\n      // unpipe from stream and destroy\r\n      if (stream !== req) {\r\n        unpipe(req)\r\n        destroy(stream, true)\r\n      }\r\n\r\n      // read off entire request\r\n      dump(req, function onfinished () {\r\n        next(createError(400, _error))\r\n      })\r\n      return\r\n    }\r\n\r\n    // verify\r\n    if (verify) {\r\n      try {\r\n        debug('verify body')\r\n        verify(req, res, body, encoding)\r\n      } catch (err) {\r\n        next(createError(403, err, {\r\n          body: body,\r\n          type: err.type || 'entity.verify.failed'\r\n        }))\r\n        return\r\n      }\r\n    }\r\n\r\n    // parse\r\n    var str = body\r\n    try {\r\n      debug('parse body')\r\n      str = typeof body !== 'string' && encoding !== null\r\n        ? iconv.decode(body, encoding)\r\n        : body\r\n      req.body = parse(str)\r\n    } catch (err) {\r\n      next(createError(400, err, {\r\n        body: str,\r\n        type: err.type || 'entity.parse.failed'\r\n      }))\r\n      return\r\n    }\r\n\r\n    next()\r\n  })\r\n}\r\n\r\n/**\r\n * Get the content stream of the request.\r\n *\r\n * @param {object} req\r\n * @param {function} debug\r\n * @param {boolean} [inflate=true]\r\n * @return {object}\r\n * @api private\r\n */\r\n\r\nfunction contentstream (req, debug, inflate) {\r\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\r\n  var length = req.headers['content-length']\r\n  var stream\r\n\r\n  debug('content-encoding \"%s\"', encoding)\r\n\r\n  if (inflate === false && encoding !== 'identity') {\r\n    throw createError(415, 'content encoding unsupported', {\r\n      encoding: encoding,\r\n      type: 'encoding.unsupported'\r\n    })\r\n  }\r\n\r\n  switch (encoding) {\r\n    case 'deflate':\r\n      stream = zlib.createInflate()\r\n      debug('inflate body')\r\n      req.pipe(stream)\r\n      break\r\n    case 'gzip':\r\n      stream = zlib.createGunzip()\r\n      debug('gunzip body')\r\n      req.pipe(stream)\r\n      break\r\n    case 'identity':\r\n      stream = req\r\n      stream.length = length\r\n      break\r\n    default:\r\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\r\n        encoding: encoding,\r\n        type: 'encoding.unsupported'\r\n      })\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * Dump the contents of a request.\r\n *\r\n * @param {object} req\r\n * @param {function} callback\r\n * @api private\r\n */\r\n\r\nfunction dump (req, callback) {\r\n  if (onFinished.isFinished(req)) {\r\n    callback(null)\r\n  } else {\r\n    onFinished(req, callback)\r\n    req.resume()\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/lib/read.js b/node_modules/body-parser/lib/read.js
--- a/node_modules/body-parser/lib/read.js	(revision 323ea0b0fe1e2bb0c642134f02dc94ef6e117ad7)
+++ b/node_modules/body-parser/lib/read.js	(date 1649364755418)
@@ -203,3 +203,20 @@
     req.resume()
   }
 }
+
+/**
+ * Dump the contents of a request.
+ *
+ * @param {object} req
+ * @param {function} callback
+ * @api private
+ */
+
+function dump (req, callback) {
+  if (onFinished.isFinished(req)) {
+    callback(null)
+  } else {
+    onFinished(req, callback)
+    req.resume()
+  }
+}
